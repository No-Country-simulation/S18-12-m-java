spring.application.name=Api-Rest

# Consola
logging.pattern.dateformat=HH:mm
spring.main.banner-mode=off

#Datasource config
spring.datasource.url=${DB_URL}${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
## Configuracion para crear la base de datos si no existe
### Others Options: create-drop, update, create, validate. Use 'update' if you only want to update the schema.
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.generate_statistics=true

# Specify the path of the OpenAPI documentation
springdoc.api-docs.path=/api-docs
# Specify the path of the Swagger UI
springdoc.swagger-ui.path=/swagger-ui-custom.html
#For sorting endpoints alphabetically
springdoc.swagger-ui.operationsSorter=alpha
#For sorting tags alphabetically
springdoc.swagger-ui.tagsSorter=alpha

# Configuring JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Cloudinary vars
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# Configuraci√≥n de HikariCP para el problema de las maximas conexiones
# permitidas para el usuario, en bases de datos MySQL de Heroku: JawsDB o ClearDB.
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.poolName=MyHikariPool